{"mappings":"AA2BA,SAASA,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAOC,QAAU,IAAIC,SAAQ,CAACC,EAAKC,KACjCC,aAAY,KACNP,GACFK,EAAI,C,SAACP,E,MAAUC,IAEjBO,EAAI,C,SAACR,E,MAAUC,GAAO,GACtB,GACDA,E,CApCSS,SAASC,cAAc,SAE/BC,iBAAiB,UAEvB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAOb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,GAAUJ,EAAMK,OAAOC,SAErCC,EAAaC,OAAON,EAAMO,OAC1BC,EAAcF,OAAOJ,EAAOK,OAC5BE,EAAYH,OAAOL,EAAKM,OAG9B,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrC1B,EAAc0B,EAAGL,GAAYM,MAAK,EAAC1B,SAACA,EAAQC,MAAEA,MAC5C0B,QAAQC,IAAI,uBAAqB5B,QAAiBC,MAAU,IAE7D4B,OAAM,EAAC7B,SAACA,EAAQC,MAAEA,MACjB0B,QAAQC,IAAI,sBAAoB5B,QAAiBC,MAAU,IAE7DmB,GAAcI,C","sources":["src/js/03-promises.js"],"sourcesContent":["const formR = document.querySelector(\".form\");\n \nformR.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventdefault();\n  \n  const {delay, step, amount} = event.target.elements;\n  \n  const delayValue = Number(delay.value);\n  const amountValue = Number(amount.value);\n  const stepValue = Number(step.value);\n  \n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue).then(({position, delay}) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delayValue += stepValue;\n  }\n  \n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return promice = new Promice((res, rej) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        res({position, delay})\n      }\n      rej({position, delay})\n    })\n  }, delay)\n  }\n\n  \n  \n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n  // createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n\n// const success = {};\n//   const notsuccess = {};\n//     if (shouldResolve) {\n//     // Fulfill\n//       for (let i = 1; i <= position; i += 1) {     \n//           position = i;\n//       }\n//       for (let j = inputDel.value; j >= inputDel.value; j += inputStep) {\n//         delay = j;     \n//       }\n      \n//       return success = {\n//         position: i,\n//         delay: j\n//       }\n\n//         } else {\n//           // Reject\n//           for (let i = 1; i <= position; i += 1) {     \n//             position = i;\n//         }\n//           for (let j = inputDel.value; j >= inputDel.value; j += inputStep) {\n//             delay = j;\n//           }\n\n//         return notsuccess = {\n//           position: i,\n//           delay: j\n//         }\n//         }"],"names":["$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","promice","Promice","res","rej","setInterval","document","querySelector","addEventListener","event","preventdefault","delay1","step","amount","target","elements","delayValue","Number","value","amountValue","stepValue","i","then","console","log","catch"],"version":3,"file":"03-promises.aed48f2b.js.map"}