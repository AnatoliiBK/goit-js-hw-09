{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACLN,GACFI,EAAI,CAACN,WAAUC,UAEjBM,EAAI,CAACP,WAAUC,S,MAEhBA,E,CArCSQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEvB,SAAsBC,GACpBA,EAAMC,iBAQN,IANA,IAA8BC,EAAAF,EAAMG,OAAOC,SAApCC,EAAuBH,EAAvBb,MAAOiB,EAAgBJ,EAAhBI,KAAMC,EAAUL,EAAVK,OAEhBC,EAAaC,OAAOJ,EAAMK,OACxBC,EAAcF,OAAOF,EAAOG,OAC5BE,EAAYH,OAAOH,EAAKI,OAErBG,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrC1B,EAAc0B,EAAGL,GAAYM,MAAK,SAAAC,G,IAAE3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAC5C2B,EAAA/B,GAASgC,OAAOC,KAAK,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,OACjE+B,QAAMC,IAAI,uBAAwCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAE3DiC,OAAM,SAAAP,G,IAAE3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAA/B,GAASgC,OAAOC,KAAK,sBAAuCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,OAChE+B,QAAMC,IAAI,sBAAuCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAE3DmB,GAAcI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formR = document.querySelector(\".form\");\n \nformR.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  \n  const {delay, step, amount} = event.target.elements;\n  \n  let delayValue = Number(delay.value);\n  const amountValue = Number(amount.value);\n  const stepValue = Number(step.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue).then(({position, delay}) => {\n      Notiflix.Notify.info(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n      Notiflix.Notify.info(`❌ Rejected promise ${position} in ${delay}ms`);\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delayValue += stepValue;\n  }\n  \n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({position, delay})\n      }\n      rej({position, delay})\n    })\n  }, delay)\n  }\n\n  \n  \n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n  // createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n\n// const success = {};\n//   const notsuccess = {};\n//     if (shouldResolve) {\n//     // Fulfill\n//       for (let i = 1; i <= position; i += 1) {     \n//           position = i;\n//       }\n//       for (let j = inputDel.value; j >= inputDel.value; j += inputStep) {\n//         delay = j;     \n//       }\n      \n//       return success = {\n//         position: i,\n//         delay: j\n//       }\n\n//         } else {\n//           // Reject\n//           for (let i = 1; i <= position; i += 1) {     \n//             position = i;\n//         }\n//           for (let j = inputDel.value; j >= inputDel.value; j += inputStep) {\n//             delay = j;\n//           }\n\n//         return notsuccess = {\n//           position: i,\n//           delay: j\n//         }\n//         }"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","target","elements","delay1","step","amount","delayValue","Number","value","amountValue","stepValue","i","then","param","$parcel$interopDefault","Notify","info","concat","console","log","catch"],"version":3,"file":"03-promises.b73fd972.js.map"}