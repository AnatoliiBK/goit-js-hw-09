{"mappings":"AAAA,MAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAWF,SAASC,cAAc,gBAClCE,EAAYH,SAASC,cAAc,eACzBD,SAASC,cAAc,iBACvBD,SAASC,cAAc,UAGvCF,EAAMK,iBAAiB,UAGvB,SAAuBC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAU,GACVC,EAAa,GACjB,GAAIJ,EAAe,CAEjB,IAAK,IAAIK,EAAI,EAAGA,GAAKP,EAAUO,GAAK,EAChCP,EAAWO,EAEf,IAAK,IAAIC,EAAIX,EAASY,MAAOD,GAAKX,EAASY,MAAOD,GAAKV,EAC7CU,EAGV,OAAOH,EAAU,CACfL,SAAUU,EACVT,MAAOU,E,CAKL,IAAK,IAAIC,EAAI,EAAGA,GAAKZ,EAAUY,GAAK,EAClCZ,EAAWY,EAEb,IAAK,IAAIC,EAAIhB,EAASY,MAAOI,GAAKhB,EAASY,MAAOI,GAAKf,EAC7Ce,EAGZ,OAAOP,EAAa,CAClBN,SAAUU,EACVT,MAAOU,E,IAMC,IAAIG,SAAQ,CAACC,EAAKC,KAChCC,aAAY,KACNZ,SACFU,EAAIG,QAAQC,IAAI,uBAAqBnB,eAAiBC,YAEtDe,EAAEE,QAAQC,IAAI,sBAAoBnB,eAAiBC,WAAW,GAChE,GACDA,OAGKmB,MAAMf,IACZa,QAAQC,IAAI,uBAAqBnB,eAAiBC,UAAU,IAE7DoB,OAAOf,IACNY,QAAQC,IAAI,sBAAoBnB,eAAiBC,UAAU","sources":["src/js/03-promises.js"],"sourcesContent":["const formR = document.querySelector(\".form\");\nconst inputDel = document.querySelector(\"[name=delay]\");\nconst inputStep = document.querySelector(\"[name=step]\");\nconst inputAm = document.querySelector(\"[name=amount]\");\nconst btnForm = document.querySelector(\"button\")\nlet timerId = 0;\n \nformR.addEventListener(\"submit\", createPromise);\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const success = {};\n  const notsuccess = {};\n    if (shouldResolve) {\n    // Fulfill\n      for (let i = 1; i <= position; i += 1) {     \n          position = i;\n      }\n      for (let j = inputDel.value; j >= inputDel.value; j += inputStep) {\n        delay = j;     \n      }\n      \n      return success = {\n        position: i,\n        delay: j\n      }\n\n        } else {\n          // Reject\n          for (let i = 1; i <= position; i += 1) {     \n            position = i;\n        }\n          for (let j = inputDel.value; j >= inputDel.value; j += inputStep) {\n            delay = j;\n          }\n\n        return notsuccess = {\n          position: i,\n          delay: j\n        }\n        }\n      }\n\n  \n  const promice = new Promice((res, rej) => {\n    setInterval(() => {\n      if (success) {\n        res(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`))\n      }\n      rej(console.log(`❌ Rejected promise ${position} in ${delay}ms`))\n    })\n  }, delay)\n\n\n  promice.then((success) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch((notsuccess) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n\n\n\n\n\n\n\n\n\n\n  // createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$47d4ff9957288465$var$formR","document","querySelector","$47d4ff9957288465$var$inputDel","$47d4ff9957288465$var$inputStep","addEventListener","position","delay","shouldResolve","Math","random","success","notsuccess","i1","j1","value","i","j","i3","j3","Promice","res","rej","setInterval","console","log","then","catch"],"version":3,"file":"03-promises.da14c33b.js.map"}