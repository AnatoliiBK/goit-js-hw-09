{"mappings":"YAAA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAWF,SAASC,cAAc,gBAClCE,EAAYH,SAASC,cAAc,eACzBD,SAASC,cAAc,iBACvBD,SAASC,cAAc,UAGvCF,EAAMK,iBAAiB,UAGvB,SAAuBC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAGpC,GAAIF,EAAe,CAEjB,IAAK,IAAIG,EAAI,EAAGA,GAAKL,EAAUK,GAAK,EAChCL,EAAWK,EAEf,IAAK,IAAIC,EAAIT,EAASU,MAAOD,GAAKT,EAASU,MAAOD,GAAKR,EAC7CQ,EAGV,MAAiB,CACfN,SAAUQ,EACVP,MAAOQ,E,CAKL,IAAK,IAAIC,EAAI,EAAGA,GAAKV,EAAUU,GAAK,EAClCV,EAAWU,EAEb,IAAK,IAAIC,EAAId,EAASU,MAAOI,GAAKd,EAASU,MAAOI,GAAKb,EAC7Ca,EAGZ,MAAoB,CAClBX,SAAUQ,EACVP,MAAOQ,E,IAMC,IAAIG,SAAQ,SAACC,EAAKC,GAChCC,aAAY,WACNC,SACFH,EAAII,QAAQC,IAAI,uBAAwCC,OAAfnB,SAAS,QAAYmB,OAANlB,MAAM,QAE9Da,EAAEG,QAAQC,IAAI,sBAAuCC,OAAfnB,SAAS,QAAYmB,OAANlB,MAAM,O,MAE9DA,OAGKmB,MAAK,SAACJ,GACZC,QAAQC,IAAI,uBAAwCC,OAAfnB,SAAS,QAAYmB,OAANlB,MAAM,M,IAE3DoB,OAAM,SAACC,GACNL,QAAQC,IAAI,sBAAuCC,OAAfnB,SAAS,QAAYmB,OAANlB,MAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const formR = document.querySelector(\".form\");\nconst inputDel = document.querySelector(\"[name=delay]\");\nconst inputStep = document.querySelector(\"[name=step]\");\nconst inputAm = document.querySelector(\"[name=amount]\");\nconst btnForm = document.querySelector(\"button\")\nlet timerId = 0;\n \nformR.addEventListener(\"submit\", createPromise);\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const success = {};\n  const notsuccess = {};\n    if (shouldResolve) {\n    // Fulfill\n      for (let i = 1; i <= position; i += 1) {     \n          position = i;\n      }\n      for (let j = inputDel.value; j >= inputDel.value; j += inputStep) {\n        delay = j;     \n      }\n      \n      return success = {\n        position: i,\n        delay: j\n      }\n\n        } else {\n          // Reject\n          for (let i = 1; i <= position; i += 1) {     \n            position = i;\n        }\n          for (let j = inputDel.value; j >= inputDel.value; j += inputStep) {\n            delay = j;\n          }\n\n        return notsuccess = {\n          position: i,\n          delay: j\n        }\n        }\n      }\n\n  \n  const promice = new Promice((res, rej) => {\n    setInterval(() => {\n      if (success) {\n        res(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`))\n      }\n      rej(console.log(`❌ Rejected promise ${position} in ${delay}ms`))\n    })\n  }, delay)\n\n\n  promice.then((success) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch((notsuccess) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n\n\n\n\n\n\n\n\n\n\n  // createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$ce04d3a99e08e73b$var$formR","document","querySelector","$ce04d3a99e08e73b$var$inputDel","$ce04d3a99e08e73b$var$inputStep","addEventListener","position","delay","shouldResolve","Math","random","_$i","_$j","value","i","j","_$i1","_$j1","Promice","res","rej","setInterval","success","console","log","concat","then","catch","notsuccess"],"version":3,"file":"03-promises.564cc5d1.js.map"}